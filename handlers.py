# handlers.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à—ñ –º–æ–¥—É–ª—ñ
import stages
import state_manager
import assets

async def handle_choice(query, text_response, health=0, resources=0, relationships=0, hope=0, suspicion=0):
    """–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–±–æ—Ä—É."""
    user_id = query.from_user.id
    state_manager.update_stats(user_id, health, resources, relationships, hope, suspicion)
    if text_response:
        await query.message.reply_text(text_response, parse_mode='HTML')

# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞–¥—Å–∏–ª–∞—î –≤—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –≤—ñ–¥–µ–æ —Ç–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å—Ç–∞—Ä—Ç—É."""
    user = update.effective_user
    state_manager.reset_user_state(user.id)
    
    # 1. –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π –¥–∏—Å–∫–ª–µ–π–º–µ—Ä
    disclaimer_text = (
        "<b>–£–≤–∞–≥–∞!</b>\n\n"
        "–¶—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è –∑–∞—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏—Ö —Å–≤—ñ–¥—á–µ–Ω–Ω—è—Ö –ª—é–¥–µ–π, —â–æ –ø–µ—Ä–µ–∂–∏–ª–∏ –æ–±–ª–æ–≥—É –ú–∞—Ä—ñ—É–ø–æ–ª—è. "
        "–á—ó –º–µ—Ç–∞ ‚Äî –Ω–µ —Ä–æ–∑–≤–∞–∂–∏—Ç–∏, –∞ –∑–±–µ—Ä–µ–≥—Ç–∏ –ø–∞–º'—è—Ç—å –ø—Ä–æ —Ç—Ä–∞–≥–µ–¥—ñ—é —Ç–∞ –Ω–µ–∑–ª–∞–º–Ω—ñ—Å—Ç—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –¥—É—Ö—É.\n\n"
        "–Ü—Å—Ç–æ—Ä—ñ—è –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ —Å—Ü–µ–Ω–∏, —â–æ –µ–º–æ—Ü—ñ–π–Ω–æ –≤–∞–∂–∫–æ —Å–ø—Ä–∏–π–º–∞—Ç–∏. "
        "–ü–æ–≥–ª—è–Ω—å—Ç–µ –Ω–∞ —Ç–µ, —â–æ —Ä–æ—Å—ñ—è –∑—Ä–æ–±–∏–ª–∞ –∑ –Ω–∞—à–∏–º –º—ñ—Å—Ç–æ–º."
    )
    await update.message.reply_html(disclaimer_text)

    # 2. –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–µ–æ—Ñ–∞–π–ª –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —à–ª—è—Ö—É
    try:
        with open(assets.VIDEO_PATH, 'rb') as video_file:
            await context.bot.send_video(chat_id=user.id, video=video_file, supports_streaming=True)
    except FileNotFoundError:
        print(f"Video file not found at {assets.VIDEO_PATH}. Sending URL as fallback.")
        await update.message.reply_text(f"–í—ñ–¥–µ–æ –∑—Ä—É–π–Ω–æ–≤–∞–Ω–æ–≥–æ –º—ñ—Å—Ç–∞: {assets.VIDEO_URL}")
    except Exception as e:
        print(f"Error sending local video: {e}. Sending URL as fallback.")
        await update.message.reply_text(f"–í—ñ–¥–µ–æ –∑—Ä—É–π–Ω–æ–≤–∞–Ω–æ–≥–æ –º—ñ—Å—Ç–∞: {assets.VIDEO_URL}")

    # 3. –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏
    keyboard = [[InlineKeyboardButton("–Ø –≥–æ—Ç–æ–≤–∏–π / –≥–æ—Ç–æ–≤–∞ –ø–æ—á–∞—Ç–∏", callback_data='intro_accept_start')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏.", reply_markup=reply_markup)


async def new_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î –≥—Ä—É, –≤–∏–∫–ª–∏–∫–∞—é—á–∏ –ª–æ–≥—ñ–∫—É /start."""
    await start(update, context)

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –≥—Ä–∞–≤—Ü—è."""
    user_id = update.effective_user.id
    state = state_manager.get_user_state(user_id)
    status_text = (
        "<b>–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:</b>\n\n"
        f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤'—è: {state['health']}/100\n"
        f"üí° –†–µ—Å—É—Ä—Å–∏: {state['resources']}/100\n"
        f"ü§ù –í—ñ–¥–Ω–æ—Å–∏–Ω–∏: {state['relationships']}/100\n"
        f"üî• –ù–∞–¥—ñ—è: {state['hope']}/100"
    )
    await update.message.reply_html(status_text)

# --- –ì–æ–ª–æ–≤–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫ ---

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.edit_message_reply_markup(reply_markup=None)

    user_id = query.from_user.id
    data = query.data.split('_')
    action_type, stage_name, choice = data[0], data[1], '_'.join(data[2:])
    
    state = state_manager.get_user_state(user_id)
    if state['health'] <= 0:
        await stages.game_over(query, "–¢–∏ –ø–æ–º–µ—Ä –≤—ñ–¥ —Ä–∞–Ω —Ç–∞ –≤–∏—Å–Ω–∞–∂–µ–Ω–Ω—è.")
        return
    if state['hope'] <= 0:
        await stages.game_over(query, "–¢–∏ –≤—Ç—Ä–∞—Ç–∏–≤ –±—É–¥—å-—è–∫—É –Ω–∞–¥—ñ—é —ñ –∑–¥–∞–≤—Å—è.")
        return

    # --- –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥—ñ–π ---
    
    if action_type == 'intro' and stage_name == 'accept':
        try:
            caption = "–î–ª—è –ø–æ–≤–Ω–æ–≥–æ –∑–∞–Ω—É—Ä–µ–Ω–Ω—è, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —É–≤—ñ–º–∫–Ω—É—Ç–∏ —Ü–µ–π —Ç—Ä–µ–∫."
            with open(assets.MUSIC_PATH, 'rb') as audio_file:
                await query.message.reply_audio(audio=audio_file, caption=caption)
        except Exception as e:
            print(f"Error sending audio: {e}")
        
        await stages.stage_day1(query)
        return

    if action_type == 'act':
        if stage_name == 'day1':
            if choice == 'phone':
                await handle_choice(query, "üì± –¢–∏ –±–∞—á–∏—à –Ω–æ–≤–∏–Ω–∏... (üí°-5, üî•-5)", resources=-5, hope=-5)
                state_manager.set_flag(user_id, 'phone_cleaned', False)
            elif choice == 'suitcase':
                await handle_choice(query, "üéí –¢–∏ –¥—ñ—î—à –Ω–∞ —ñ–Ω—Å—Ç–∏–Ω–∫—Ç–∞—Ö... (ÔøΩ+10)", resources=10)
            elif choice == 'window':
                await handle_choice(query, "üëÄ –¢–∏ –±–∞—á–∏—à –∑–∞–≥—Ä–∞–≤—É... (‚ù§Ô∏è-5, üî•-10)", health=-5, hope=-10)
            await stages.stage_day1_call(query)
        
        elif stage_name == 'day1call':
            if choice == 'calm': await handle_choice(query, "–¢–≤—ñ–π —Å–ø–æ–∫—ñ–π –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —ó–º. (ü§ù+10, üî•+5)", relationships=10, hope=5)
            elif choice == 'panic': await handle_choice(query, "–í–∞—à–∞ —Ä–æ–∑–º–æ–≤–∞ –ª–∏—à–µ –ø–æ—Å–∏–ª—é—î –ø–∞–Ω—ñ–∫—É. (ü§ù-5, üî•-5)", relationships=-5, hope=-5)
            elif choice == 'evacuate': await handle_choice(query, "–Ü–¥–µ—è –ø—Ä–æ –≤–∏—ó–∑–¥ –ø–æ—Ä–æ–¥–∂—É—î –±–µ–∑—Å–∏–ª–ª—è. (üí°-5, üî•-10)", resources=-5, hope=-10)
            await stages.stage_day2(query)
        
        elif stage_name == 'day2':
            if choice == 'supermarket': await handle_choice(query, "–¢–∏ –≤—Å—Ç–∏–≥–∞—î—à —Å—Ö–æ–ø–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ –∫—Ä—É–ø–∏... (üí°+20)", resources=20)
            elif choice == 'atm': await handle_choice(query, "–í–¥–∞—î—Ç—å—Å—è –∑–Ω—è—Ç–∏ –∫—ñ–ª—å–∫–∞ —Ç–∏—Å—è—á... (üí°+15)", resources=15)
            elif choice == 'pharmacy': await handle_choice(query, "–ù–∞–π—Ü—ñ–Ω–Ω—ñ—à–∞ —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è. (‚ù§Ô∏è+5, üí°+15)", health=5, resources=15)
            await stages.stage_day5(query)

        elif stage_name == 'day5':
            if choice == 'join': await handle_choice(query, "–°–ø—ñ–ª—å–Ω–∞ –±—ñ–¥–∞ –æ–±'—î–¥–Ω—É—î... (ü§ù+15, üî•+5)", relationships=15, hope=5)
            elif choice == 'own_fire': await handle_choice(query, "–ó–∞—Ä–∞–∑ –∫–æ–∂–µ–Ω —Å–∞–º –∑–∞ —Å–µ–±–µ. (ü§ù-5, üí°-5)", relationships=-5, resources=-5)
            elif choice == 'radio': await handle_choice(query, "–ö—Ä—ñ–∑—å —à–∏–ø—ñ–Ω–Ω—è —Ç–∏ —á—É—î—à —É—Ä–∏–≤–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –Ω–æ–≤–∏–Ω. –¶–µ –¥–∞—î –Ω–∞–¥—ñ—é. (üî•+15, üí°-2)", hope=15, resources=-2)
            await stages.stage_signal_hunt(query)
        
        elif stage_name == 'signalhunt':
            if choice == 'go':
                await handle_choice(query, "–¢–∏ –¥–æ–±–∏—Ä–∞—î—à—Å—è –¥–æ –º—ñ—Å—Ü—è. –î–µ—Å—è—Ç–∫–∏ –ª—é–¥–µ–π —Å—Ç–æ—è—Ç—å –∑ –ø—ñ–¥–Ω—è—Ç–∏–º–∏ —Ä—É–∫–∞–º–∏, –Ω–∞–º–∞–≥–∞—é—á–∏—Å—å –∑–ª–æ–≤–∏—Ç–∏ —Å–∏–≥–Ω–∞–ª. –¢–∏ –∑–º—ñ–≥ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –æ–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '–ñ–∏–≤–∏–π'. –ê–ª–µ –Ω–∞—Ç–æ–≤–ø –ø–æ–º—ñ—á–∞—î –≤–æ—Ä–æ–∂–∏–π –¥—Ä–æ–Ω. –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –æ–±—Å—Ç—Ä—ñ–ª. –¢–∏ –ª–µ–¥—å –≤—Å—Ç–∏–≥–∞—î—à –≤—Ç–µ–∫—Ç–∏. (‚ù§Ô∏è-25, üî•+20, ü§ù+5)", health=-25, hope=20, relationships=5)
            elif choice == 'stay':
                await handle_choice(query, "–¢–∏ –Ω–µ —Ä–∏–∑–∏–∫–Ω—É–≤. –ù–µ–≤—ñ–¥–æ–º—ñ—Å—Ç—å –ø—Ä–æ –¥–æ–ª—é —Ä—ñ–¥–Ω–∏—Ö –ø—Ä–æ–¥–æ–≤–∂—É—î —Ç–µ–±–µ –º—É—á–∏—Ç–∏. (üî•-15)", hope=-15)
            await stages.stage_day13(query)

        elif stage_name == 'day13':
            if choice == 'hug': await handle_choice(query, "–ú–æ–≤—á–∞–∑–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –≤–∞–∂–∏—Ç—å –±—ñ–ª—å—à–µ –∑–∞ —Å–ª–æ–≤–∞. (ü§ù+15, üî•+10)", relationships=15, hope=10)
            elif choice == 'tea': await handle_choice(query, "–ú–∞–ª–µ–Ω—å–∫–∏–π –∞–∫—Ç –ª—é–¥—è–Ω–æ—Å—Ç—ñ. (üí°-10, ü§ù+10)", resources=-10, relationships=10)
            elif choice == 'rage': await handle_choice(query, "–¢–≤—ñ–π –≥–Ω—ñ–≤ –ª—è–∫–∞—î —ó—ó... (üî•-15, ü§ù-10)", hope=-15, relationships=-10)
            await stages.stage_dramatheater(query) 

        elif stage_name == 'shelter':
            if choice == 'dramatheater':
                await query.message.reply_text("–¢–∏ –≤–∏—Ä—ñ—à–∏–≤ –π—Ç–∏ –¥–æ –î—Ä–∞–º—Ç–µ–∞—Ç—Ä—É. –¢–∏ –¥—ñ—Å—Ç–∞–≤—Å—è –¥–æ –Ω—å–æ–≥–æ. –¢–∞–º —Ç–∏—Å—è—á—ñ –ª—é–¥–µ–π. –ó–¥–∞—î—Ç—å—Å—è, —Ü–µ –Ω–∞–π–±–µ–∑–ø–µ—á–Ω—ñ—à–µ –º—ñ—Å—Ü–µ —É –º—ñ—Å—Ç—ñ. 16 –±–µ—Ä–µ–∑–Ω—è —Ç–∏ —á—É—î—à –∂–∞—Ö–ª–∏–≤–∏–π –≥—É–ª –ª—ñ—Ç–∞–∫–∞, –∞ –ø–æ—Ç—ñ–º - –≤–∏–±—É—Ö, —â–æ —Ä—É–π–Ω—É—î –≤—Å–µ –Ω–∞–≤–∫–æ–ª–æ. –°—Ç–µ–ª—è –æ–±–≤–∞–ª—é—î—Ç—å—Å—è.")
                await stages.send_photo_from_path(query.message, assets.PHOTO_PATHS['dramtheater_after'])
                await stages.game_over(query, "–¢–∏ –∑–∞–≥–∏–Ω—É–≤ –ø—ñ–¥ –∑–∞–≤–∞–ª–∞–º–∏ –î—Ä–∞–º—Ç–µ–∞—Ç—Ä—É. –ù–∞–ø–∏—Å '–î–ï–¢–ò' –Ω–µ –≤—Ä—è—Ç—É–≤–∞–≤ –Ω—ñ–∫–æ–≥–æ.")
                return
            elif choice == 'artschool':
                await query.message.reply_text("–¢–∏ –æ–±—Ä–∞–≤ –®–∫–æ–ª—É –º–∏—Å—Ç–µ—Ü—Ç–≤. –¢–∞–º —Ç–µ–∂ –±–∞–≥–∞—Ç–æ –ª—é–¥–µ–π, –ø–µ—Ä–µ–≤–∞–∂–Ω–æ –∂—ñ–Ω–∫–∏ —Ç–∞ –¥—ñ—Ç–∏. 20 –±–µ—Ä–µ–∑–Ω—è, –∫–æ–ª–∏ —Ç–∏ –∑–Ω–∞—Ö–æ–¥–∏–≤—Å—è —É –ø—ñ–¥–≤–∞–ª—ñ, —Ä–æ—Å—ñ—è–Ω–∏ —Å–∫–∏–Ω—É–ª–∏ –Ω–∞ —à–∫–æ–ª—É –±–æ–º–±—É.")
                await stages.send_photo_from_path(query.message, assets.PHOTO_PATHS['art_school_ruins'])
                await stages.game_over(query, "–¢–∏ –∑–∞–≥–∏–Ω—É–≤ –ø—ñ–¥ –∑–∞–≤–∞–ª–∞–º–∏ –®–∫–æ–ª–∏ –º–∏—Å—Ç–µ—Ü—Ç–≤ ‚Ññ12.")
                return
            elif choice == 'stay':
                await handle_choice(query, "–¢–∏ –≤–∏—Ä—ñ—à–∏–≤ –∑–∞–ª–∏—à–∏—Ç–∏—Å—è —É —Å–≤–æ—î–º—É —Å—Ö–æ–≤–∫—É. –¶–µ –±—É–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä. –ß–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ –¥–Ω—ñ–≤ —Ç–∏ –¥—ñ–∑–Ω–∞–≤—Å—è, —â–æ —ñ –î—Ä–∞–º—Ç–µ–∞—Ç—Ä, —ñ –®–∫–æ–ª—É –º–∏—Å—Ç–µ—Ü—Ç–≤ —Ä–æ–∑–±–æ–º–±–∏–ª–∏. –¢–∏ –≤–∏–∂–∏–≤, –∞–ª–µ —Ü—ñ–Ω–æ—é –∑–Ω–∞–Ω–Ω—è –ø—Ä–æ –∑–∞–≥–∏–±–µ–ª—å —Å–æ—Ç–µ–Ω—å —ñ–Ω—à–∏—Ö.", hope=-25, suspicion=-3)
                await stages.stage_day18(query)

        elif stage_name == 'day18':
            if choice == 'snow': await handle_choice(query, "–†–∏–∑–∏–∫ –±—É–≤ –≤–µ–ª–∏—á–µ–∑–Ω–∏–π, –∞–ª–µ —Ç–∏ –∑–¥–æ–±—É–≤ –≤–æ–¥—É. (‚ù§Ô∏è-20, üí°+15)", health=-20, resources=15)
            elif choice == 'basement': await handle_choice(query, "–ë–µ–∑–ø–µ—á–Ω—ñ—à–µ. –¢–∏ –∑–Ω–∞—Ö–æ–¥–∏—à —Ç—Ä—É–±—É, —â–æ –∫–∞–ø–∞—î. (‚ù§Ô∏è-5, üí°+10)", health=-5, resources=10)
            elif choice == 'sleep': await handle_choice(query, "–ó–Ω–µ–≤–æ–¥–Ω–µ–Ω–Ω—è –ø–æ—Å–∏–ª—é—î—Ç—å—Å—è. (‚ù§Ô∏è-15, üí°+5)", health=-15, resources=5)
            await stages.stage_green_corridor(query)

        elif stage_name == 'corridor':
            if choice == 'go':
                await handle_choice(query, "–í–∞—à–∞ –∫–æ–ª–æ–Ω–∞ —Ä—É—à–∞—î. –ê–ª–µ –∑–∞ –º—ñ—Å—Ç–æ–º —ó—ó –ø–æ—á–∏–Ω–∞—é—Ç—å —Ä–æ–∑—Å—Ç—Ä—ñ–ª—é–≤–∞—Ç–∏ –∑ –º—ñ–Ω–æ–º–µ—Ç—ñ–≤. –ü–∞–Ω—ñ–∫–∞, –∫—Ä–∏–∫–∏. –¢–≤–æ—è –º–∞—à–∏–Ω–∞ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∞. –¢–∏ –¥–∏–≤–æ–º –≤–∏–∂–∏–≤–∞—î—à, –∞–ª–µ –∑–º—É—à–µ–Ω–∏–π –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥ —É –ø–µ–∫–ª–æ, –≤—Ç—Ä–∞—Ç–∏–≤—à–∏ –º–∞–π–∂–µ –≤—Å–µ.", health=-30, resources=-30, hope=-40)
            elif choice == 'stay':
                await handle_choice(query, "–¢–∏ –Ω–µ –ø–æ–≤—ñ—Ä–∏–≤ –æ–∫—É–ø–∞–Ω—Ç–∞–º —ñ –∑–∞–ª–∏—à–∏–≤—Å—è. –ü—ñ–∑–Ω—ñ—à–µ —Ç–∏ –¥—ñ–∑–Ω–∞–≤—Å—è, —â–æ –∫–æ–ª–æ–Ω—É —Ä–æ–∑—Å—Ç—Ä—ñ–ª—è–ª–∏. –¢–≤–æ—è –Ω–µ–¥–æ–≤—ñ—Ä–∞ –≤—Ä—è—Ç—É–≤–∞–ª–∞ —Ç–æ–±—ñ –∂–∏—Ç—Ç—è.", hope=10, suspicion=-2)
            await stages.stage_day32(query)
        
        elif stage_name == 'day32':
            state_manager.set_flag(user_id, 'met_azov', True)
            if choice == 'take_help': await handle_choice(query, "–í–æ–¥–∞ —ñ –≥–∞–ª–µ—Ç–∏ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å —Ç–µ–±–µ –¥–æ –∂–∏—Ç—Ç—è. (‚ù§Ô∏è+15, üí°+10, üî•+10)", health=15, resources=10, hope=10, suspicion=3)
            elif choice == 'blame': await handle_choice(query, "–£ –π–æ–≥–æ –ø–æ–≥–ª—è–¥—ñ –≤—Ç–æ–º–∞ —ñ –±—ñ–ª—å. (ü§ù-10, üî•-10)", relationships=-10, hope=-10, suspicion=5)
            elif choice == 'give_info':
                await handle_choice(query, "–¢–≤–æ—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –º–æ–∂–µ –≤—Ä—è—Ç—É–≤–∞—Ç–∏ –∂–∏—Ç—Ç—è. (ü§ù+10, üî•+15)", relationships=10, hope=15, suspicion=10)
                state_manager.set_flag(user_id, 'helped_azov', True)
            await stages.stage_day45(query)
        elif stage_name == 'day45':
            if choice == 'orphan':
                await handle_choice(query, "–¢—É—Ä–±–æ—Ç–∞ –ø—Ä–æ –¥–∏—Ç–∏–Ω—É –ø–æ–≤–µ—Ä—Ç–∞—î —Å–µ–Ω—Å... (ü§ù+20, üî•+15)", relationships=20, hope=15)
                state_manager.set_flag(user_id, 'took_orphan', True)
            elif choice == 'read': await handle_choice(query, "–î—ñ—Ç–∏, —â–æ —Å–ª—É—Ö–∞—é—Ç—å –∫–∞–∑–∫—É - —Å–∏–º–≤–æ–ª –Ω–µ–∑–ª–∞–º–Ω–æ—Å—Ç—ñ. (ü§ù+10, üî•+10)", relationships=10, hope=10)
            elif choice == 'avoid': await handle_choice(query, "–¢–∏ –∑–∞–º–∏–∫–∞—î—à—Å—è –≤ —Å–æ–±—ñ. (ü§ù-15)", relationships=-15)
            await stages.stage_day60(query)
        elif stage_name == 'day60':
            if choice == 'believe': await handle_choice(query, "–ù–∞–¥—ñ—è - —î–¥–∏–Ω–µ, —â–æ –∑–∞–ª–∏—à–∏–ª–æ—Å—å. (üî•+20)", hope=20)
            elif choice == 'lose_faith': await handle_choice(query, "–¢–∏ –±–∞—á–∏–≤ –∑–∞–±–∞–≥–∞—Ç–æ –±—Ä–µ—Ö–Ω—ñ... (üî•-20)", hope=-20)
            elif choice == 'write_letter': await handle_choice(query, "–¢–∏ –≤–∏–ª–∏–≤–∞—î—à —Å–≤—ñ–π –±—ñ–ª—å –Ω–∞ –ø–∞–ø—ñ—Ä. (üî•-10)", hope=-10)
            await stages.stage_filtration1(query)
        elif stage_name == 'filtration1':
            if choice == 'relatives': await handle_choice(query, "", suspicion=1)
            elif choice == 'home': await handle_choice(query, "", suspicion=3)
            elif choice == 'end': await handle_choice(query, "", suspicion=0)
            await stages.stage_filtration2(query)
        elif stage_name == 'filtration2':
            state = state_manager.get_user_state(user_id)
            if choice == 'no':
                if state['met_azov']: await handle_choice(query, "–¢–∏ –±—Ä–µ—à–µ—à. –ß–∏ –ø–æ–≤—ñ—Ä–∏—Ç—å –≤—ñ–Ω?", suspicion=2)
                else: await handle_choice(query, "–¢–∏ –∫–∞–∂–µ—à –ø—Ä–∞–≤–¥—É.", suspicion=0)
            elif choice == 'silence': await handle_choice(query, "–¢–≤–æ—î –º–æ–≤—á–∞–Ω–Ω—è –∫—Ä–∞—Å–Ω–æ–º–æ–≤–Ω—ñ—à–µ –∑–∞ —Å–ª–æ–≤–∞.", suspicion=5)
            await stages.stage_filtration3(query)
        elif stage_name == 'filtration3':
            if choice == 'apolitical': await handle_choice(query, "", suspicion=0)
            elif choice == 'tragedy': await handle_choice(query, "", suspicion=2)
            elif choice == 'truth': await handle_choice(query, "–¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Å–ø–æ–≤–Ω–µ–Ω–∞ –Ω–µ–Ω–∞–≤–∏—Å—Ç—ñ...", suspicion=10)
            await stages.stage_filtration4(query)
        elif stage_name == 'filtration4':
            state = state_manager.get_user_state(user_id)
            if choice == 'clean':
                if not state['phone_cleaned']: await handle_choice(query, "–¢–∏ –±—Ä–µ—à–µ—à. –¢–∏ –Ω–µ –º–∞–≤ —á–∞—Å—É –π–æ–≥–æ —á–∏—Å—Ç–∏—Ç–∏.", suspicion=5)
                else: await handle_choice(query, "", suspicion=-2)
            elif choice == 'patriotic':
                if not state['phone_cleaned']: await handle_choice(query, "–í—ñ–Ω –±–∞—á–∏—Ç—å —Ñ–æ—Ç–æ... –¶–µ –≤–∏—Ä–æ–∫.", suspicion=20)
                else: await handle_choice(query, "–í—ñ–Ω –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å.", suspicion=-5)
            elif choice == 'lost': await handle_choice(query, "–ù–∞–π–±—ñ–ª—å—à –ø—ñ–¥–æ–∑—Ä—ñ–ª–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.", suspicion=7)
            await stages.filtration_results(query)
        elif stage_name == 'epilogue':
            final_text = ""
            if choice == 'z_recover': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –í—Ü—ñ–ª—ñ–ª–∏–π.</b>\n–¢–∏ –∑–Ω–∞–π—à–æ–≤ —É —Å–æ–±—ñ —Å–∏–ª–∏ –∂–∏—Ç–∏ –¥–∞–ª—ñ..."
            elif choice == 'z_army': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –ó–∞—Ö–∏—Å–Ω–∏–∫.</b>\n–¢–≤—ñ–π –±—ñ–ª—å –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏–≤—Å—è –Ω–∞ –ª—é—Ç—å..."
            elif choice == 'z_witness': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –°–≤—ñ–¥–æ–∫.</b>\n–¢–∏ –ø—Ä–∏—Å–≤—è—á—É—î—à —Å–≤–æ—î –∂–∏—Ç—Ç—è —Ç–æ–º—É, —â–æ–± —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ —Å–≤—ñ—Ç–æ–≤—ñ –ø—Ä–∞–≤–¥—É..."
            elif choice == 'e_escape': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –í'—è–∑–µ–Ω—å, —â–æ –±—ñ–∂–∏—Ç—å.</b>\n–¢–∏ –Ω–µ –∑–¥–∞—î—à—Å—è..."
            elif choice == 'e_wait': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –¢–æ–π, —Ö—Ç–æ —á–µ–∫–∞—î.</b>\n–¢–∏ –∑–∞—Ç–∞—ó–≤—Å—è, —Å—Ç–∞–≤—à–∏ —Ç—ñ–Ω–Ω—é..."
            elif choice == 'e_keeper': final_text = "<b>–ï–ø—ñ–ª–æ–≥: –•—Ä–∞–Ω–∏—Ç–µ–ª—å.</b>\n–°–µ—Ä–µ–¥ —á—É–∂–∏—Ö —Ç–∏ –∑–Ω–∞—Ö–æ–¥–∏—à —Å–≤–æ—ó—Ö..."
            await query.message.reply_text(final_text, parse_mode='HTML')
            await query.message.reply_text("–î—è–∫—É—é –∑–∞ –≥—Ä—É. –©–æ–± –ø–æ—á–∞—Ç–∏ –∑–Ω–æ–≤—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start –∞–±–æ /newgame")
